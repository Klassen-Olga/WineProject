-- MySQL Script generated by MySQL Workbench
-- Fri Dec 13 14:53:43 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema SKWD
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema SKWD
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `SKWD` ;
USE `SKWD` ;

-- -----------------------------------------------------
-- Table `SKWD`.`Address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SKWD`.`Address` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `country` VARCHAR(50) NOT NULL,
  `city` VARCHAR(50) NOT NULL,
  `zip` VARCHAR(15) NOT NULL,
  `street` VARCHAR(50) NOT NULL,
  `createdAt` TIMESTAMP NOT NULL,
  `updatedAt` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `SKWD`.`Customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SKWD`.`Customer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(50) NOT NULL,
  `lastName` VARCHAR(50) NOT NULL,
  `gender` ENUM('m', 'f', 'd') NOT NULL,
  `dateOfBirth` DATE NOT NULL,
  `phoneNumber` VARCHAR(20) NULL DEFAULT NULL,
  `addressID` INT NOT NULL,
  `createdAt` TIMESTAMP NOT NULL,
  `updatedAt` TIMESTAMP NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `Customer_FK` (`addressID` ASC) VISIBLE,
  CONSTRAINT `Customer_FK`
    FOREIGN KEY (`addressID`)
    REFERENCES `SKWD`.`Address` (`id`));


-- -----------------------------------------------------
-- Table `SKWD`.`Account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SKWD`.`Account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(50) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `customerID` INT NOT NULL,
  `createdAt` TIMESTAMP NOT NULL,
  `updatedAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `Customer_UQ` (`email` ASC) VISIBLE,
  INDEX `Account_FK` (`customerID` ASC) VISIBLE,
  CONSTRAINT `Account_FK`
    FOREIGN KEY (`customerID`)
    REFERENCES `SKWD`.`Customer` (`id`));


-- -----------------------------------------------------
-- Table `SKWD`.`Vendor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SKWD`.`Vendor` (
  `vendorID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `description` VARCHAR(100) NULL DEFAULT NULL,
  `phoneNumber` VARCHAR(20) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `addressID` INT NOT NULL,
  `createdAt` TIMESTAMP NOT NULL,
  `updatedAt` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`vendorID`),
  UNIQUE INDEX `Vendor_UQ` (`email` ASC) VISIBLE,
  INDEX `Vendor_FK` (`addressID` ASC) VISIBLE,
  CONSTRAINT `Vendor_FK`
    FOREIGN KEY (`addressID`)
    REFERENCES `SKWD`.`Address` (`id`));


-- -----------------------------------------------------
-- Table `SKWD`.`Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SKWD`.`Product` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `prodName` VARCHAR(100) NOT NULL,
  `description` VARCHAR(200) NULL DEFAULT NULL,
  `standardPrice` DECIMAL(7,2) NOT NULL,
  `productType` ENUM('Drink', 'Accessory') NOT NULL,
  `vendorID` INT NOT NULL,
  `createdAt` TIMESTAMP NOT NULL,
  `updatedAt` TIMESTAMP NOT NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `Product_FK` (`vendorID` ASC) VISIBLE,
  CONSTRAINT `Product_FK`
    FOREIGN KEY (`vendorID`)
    REFERENCES `SKWD`.`Vendor` (`vendorID`));


-- -----------------------------------------------------
-- Table `SKWD`.`Picture`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SKWD`.`Picture` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `path` VARCHAR(200) NOT NULL,
  `productID` INT NOT NULL,
  `createdAt` TIMESTAMP NOT NULL,
  `updatedAt` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `Picture_FK` (`productID` ASC) VISIBLE,
  CONSTRAINT `Picture_FK`
    FOREIGN KEY (`productID`)
    REFERENCES `SKWD`.`Product` (`id`));


-- -----------------------------------------------------
-- Table `SKWD`.`Property`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SKWD`.`Property` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `createdAt` TIMESTAMP NOT NULL,
  `updatedAt` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `SKWD`.`PropertyProProduct`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SKWD`.`PropertyProProduct` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `productID` INT NOT NULL,
  `propertyID` INT NOT NULL,
  `value` VARCHAR(60) NOT NULL,
  `createdAt` TIMESTAMP NOT NULL,
  `updatedAt` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `product_FKK` (`productID` ASC) VISIBLE,
  INDEX `property_FKK` (`propertyID` ASC) VISIBLE,
  CONSTRAINT `product_FKK`
    FOREIGN KEY (`productID`)
    REFERENCES `SKWD`.`Product` (`id`),
  CONSTRAINT `property_FKK`
    FOREIGN KEY (`propertyID`)
    REFERENCES `SKWD`.`Property` (`id`));


-- -----------------------------------------------------
-- Table `SKWD`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SKWD`.`Orders` (
  `orderID` INT NOT NULL AUTO_INCREMENT,
  `orderDate` DATE NOT NULL,
  `shipDate` DATE NULL DEFAULT NULL,
  `payStatus` ENUM('unpaid', 'paid') NOT NULL,
  `payMethod` ENUM('transfer', 'cash on delivery', 'paypal') NOT NULL,
  `payDate` DATE NULL DEFAULT NULL,
  `customerID` INT NOT NULL,
  `addressID` INT NULL DEFAULT NULL,
  `createdAt` TIMESTAMP NOT NULL,
  `updatedAt` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`orderID`),
  INDEX `Basket_FK_Customer` (`customerID` ASC) VISIBLE,
  INDEX `Basket_FK_Address` (`addressID` ASC) VISIBLE,
  CONSTRAINT `Basket_FK_Customer`
    FOREIGN KEY (`customerID`)
    REFERENCES `SKWD`.`Customer` (`id`),
  CONSTRAINT `Basket_FK_Address`
    FOREIGN KEY (`addressID`)
    REFERENCES `SKWD`.`Address` (`id`));


-- -----------------------------------------------------
-- Table `SKWD`.`Basket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SKWD`.`Basket` (
  `basketID` INT NOT NULL AUTO_INCREMENT,
  `actualPrice` DECIMAL(9,2) NOT NULL,
  `qty` INT(5) NOT NULL,
  `productID` INT NOT NULL,
  `orderID` INT NOT NULL,
  `createdAt` TIMESTAMP NOT NULL,
  `updatedAt` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`basketID`),
  INDEX `Basket_FK_Product` (`productID` ASC) VISIBLE,
  INDEX `Basket_FK_Order` (`orderID` ASC) VISIBLE,
  CONSTRAINT `Basket_FK_Product`
    FOREIGN KEY (`productID`)
    REFERENCES `SKWD`.`Product` (`id`),
  CONSTRAINT `Basket_FK_Order`
    FOREIGN KEY (`orderID`)
    REFERENCES `SKWD`.`Orders` (`orderID`));

USE `SKWD` ;

-- -----------------------------------------------------
-- Placeholder table for view `SKWD`.`AllProducts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SKWD`.`AllProducts` (`productID` INT, `name` INT, `value` INT);

-- -----------------------------------------------------
-- View `SKWD`.`AllProducts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SKWD`.`AllProducts`;
USE `SKWD`;
CREATE OR REPLACE VIEW AllProducts as
select  ppt.productID, prop.name, ppt.value
from property prop
join PropertyProProduct ppt on prop.id =ppt.propertyID;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
